version: '3.8'
services:
  frontend:
    build:
      context: ./sdis-emergency/Emergency-Manager/front
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
        - net
    volumes:
      - ./sdis-emergency/Emergency-Manager/front:/app
      - /app/node_modules
    depends_on:
      - backend
  backend:
    build:
      context: ./sdis-emergency/Emergency-Manager
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "postgresql://admin:admin@database:5432/emergency_db"
    volumes:
      - ./sdis-emergency/Emergency-Manager:/var/www/html
    depends_on:
      - database
    networks:
      - net
    ports:
      - "8081:80"  # Correction ici pour éviter le conflit de port
  database:
    image: postgres:15
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: emergency_db
    networks:
      - net
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  frontend-simu:
    build:
      context: ./sdis-simulation/Simulator/front
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    networks:
      - net
    volumes:
      - ./sdis-simulation/Simulator/front:/app
    depends_on:
      - backend-simu
  backend-simu:
    build:
      context: ./sdis-simulation/Simulator
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "postgresql://admin:admin@database-simu:5432/simu_db"
    volumes:
      - ./sdis-simulation/Simulator:/var/www/html
    depends_on:
      - database-simu
    networks:
      - net
    ports:
      - "8083:80"  # Correction ici pour éviter le conflit de port
  database-simu:
    image: postgres:15
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: simu_db
    networks:
      - net
    volumes:
      - postgres_data_simu:/var/lib/postgresql/data
    ports:
      - "5433:5432"

networks:
  net:
    name: sdis-emergency
    external: true

volumes:
  postgres_data:
  postgres_data_simu:
